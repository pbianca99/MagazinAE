@model ProductVM

@inject IHttpContextAccessor HttpContextAccessor
@{
    bool isInBag = false;
    var lstCart = HttpContextAccessor.HttpContext.Session.Get<List<int>>(SessionHelper.ShoppingCart);
    if (lstCart != null && lstCart.Contains(Model.Id))
        isInBag = true;

    var route = isInBag ? "/Remove/{0}" : "/Add/{0}";
    route = string.Format(route, Model.Id);
}

<style>
    body {
        background-color: lightskyblue;
    }

    .details-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #ffffff;
        border: 1px solid #d1d1d1;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    .product-image {
        width: 100%;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .btn-action {
        width: 100%;
        margin-top: 20px;
    }

    .back-to-list {
        margin-top: 30px;
        text-align: center;
    }

    .details-header {
        background-color: lightpink;
        color: #fff;
        padding: 10px;
        text-align: center;
        border-radius: 10px 10px 0 0;
    }

    .details-title {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .details-subtitle {
        font-size: 18px;
        color: #555;
    }

    .details-description {
        margin-top: 20px;
        font-size: 16px;
        color: #333;
    }

    .btn-container {
        display: flex;
        justify-content: center;
    }

        .btn-container button {
            margin: 0 10px;
        }
</style>

<div class="details-container">
    <div class="details-header">
        <h2 class="details-title">Product Details</h2>
        <p class="details-subtitle">Explore the details of our amazing product</p>
    </div>


    <div id="cart-container">
        <!-- Initial content for cart container -->
        <p>Your shopping cart is currently empty.</p>
    </div>

    <form action="@route" method="post" id="addToCartForm">

        <div class="details-description">
            <div class="form-group">
                <label>Product Name</label>
                <input asp-for="Name" readonly class="form-control" />
            </div>

            <div class="form-group">
                <label>Price</label>
                <input asp-for="Price" readonly class="form-control" />
            </div>

            <div class="form-group">
                <label>Description</label>
                @Html.TextArea("Description", Model.Description, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        <div class="btn-container">
            @if (isInBag)
            {
                <button type="submit" value="Remove from Bag" class="btn btn-danger btn-action">Remove from Bag</button>
            }
            else
            {
                <button type="submit" value="Add to Bag" class="btn btn-primary btn-action">Add to Bag</button>
            }
        </div>
    </form>

    <div class="text-center">
        <img src="~/@Model.ImagePath" alt="no image" class="product-image" />
    </div>

    <div class="form-group back-to-list">
        <a asp-action="Index" class="btn btn-success">Back to List</a>
    </div>
</div>

@section scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/cart.js"></script>

    <script>
        // Attach an event listener to the "Add to Bag" button
        $('#addToCartBtn').on('click', function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Update the form action dynamically based on the route
            var productId = @Model.Id; // Get the actual productId from the model
            var route = "/Home/Add/" + productId;
            $('#addToCartForm').attr('action', route);

            // Submit the form
            $('#addToCartForm').submit();
        });

        // Attach an event listener to the "Show Cart" button
        $('#showCartBtn').on('click', function () {
            showCart(); // Call the showCart function when the button is clicked
        });
    </script>
}